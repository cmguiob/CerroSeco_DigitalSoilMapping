ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
type = c('l', 'g'),
panel = panel=function(...) {panel.grid(h = -1, v = -1, lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
type = c('l', 'g'),
panel = function(...) {panel.grid(h = -1, v = -1, lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
panel = function(...) {panel.grid(h = -1, v = -1, lty = 3, col = "#DAD7D6")},
phi ~ theta | ID, data = res, groups = HZ,
type = c('l', 'g'),
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
type = c('l', 'g'),
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal',
panel = function(...) {panel.grid(h = -1, v = -1, lty = 3, col = "#DAD7D6")}
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
panel = function(...) {panel.grid(lty = 3, col = "#DAD7D6")},
type = c('l', 'g'),
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
panel = function(...) {panel.xyplot(...)
panel.grid(lty = 3, col = "#DAD7D6")},
type = c('l', 'g'),
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
panel = function(...) {panel.xyplot(...)
panel.grid(lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
panel = function(...) {panel.xyplot(lty = 1)
panel.grid(lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
panel = function(...) {panel.xyplot(...)
panel.grid(lty = 3, col = "#DAD7D6")},
type = c('l'),
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
type = c('l','g'),
panel = function(...) {panel.xyplot(...)
panel.grid(lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
type = c('l'),
panel = function(...) {panel.xyplot(...)
panel.grid(lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1),
main='Retención de agua ideal'
)
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
type = c('l'),
panel = function(...) {panel.xyplot(...)
panel.grid(lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1)
)
?colorspace
library(colorspace)
choose_palette()
choose_color()
#Style for curves plot
sty_c <- list()
sty_c$strip.border$col <- NA
sty_c$strip.background$col <- NA
sty_c$superpose.line$lwd <- 1.5
sty_c$superpose.line$col <- c("#F6BE17", "#EBC16F", "#DEC398", "#C9C6C2", "#A7C2D7", "#7BAFD2", "#66AFEC")
sty_c$layout.heights$strip <-1.5
sty_c$grid.pars$fontfamily <- "roboto"
sty_c$axis.components$right$tck <- 0
sty_c$axis.components$left$tck <- 0.5
sty_c$axis.components$bottom$tck <- 0.5
sty_c$axis.components$top$tck <- 0
sty_c$axis.components$top$text <- NA
sty_c$axis.line$col <- darken("#F5F2F1", 0.3, space = "HCL")
sty_c$par.ylab.text$col = darken("#F5F2F1", 0.3, space = "HCL")
sty_c$par.ylab.text$fontfamily = "roboto"
sty_c$par.xlab.text$col = darken("#F5F2F1", 0.3, space = "HCL")
sty_c$axis.text$col = darken("#F5F2F1", 0.3, space = "HCL")
sty_c$axis.text$fontfamily = "robotoc"
xyplot(
phi ~ theta | ID, data = res, groups = HZ,
type = c('l'),
panel = function(...) {panel.xyplot(...)
panel.grid(lty = 3, col = "#DAD7D6")},
scales = list(alternating=1,
x=list(tick.number=3),
y=list(log=10, tick.number=5),
cex = 0.8),
yscale.components = yscale.components.logpower,
ylab = expression(Potencial~~matricial~~(-kPa)),
xlab = expression(Contenido~volumetrico~agua~~(cm^3/cm^3)),
par.settings = sty_c,
strip=strip.custom(bg= NA,
par.strip.text=list(font=2,
cex=0.7,
col= darken("#F5F2F1",
0.5,
space = "HCL"))),
as.table = TRUE,
layout = c(4,1)
)
install.packages("ezknitr")
devtools::install_github("ropensci/ezknitr")
?render
?knit
?render
?knit
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
rmarkdown::render(input = "02_TCI_CS_Output_localizaciones.Rmd", output_file = "02_TCI_CS_Output_localizaciones.md", output_dir = here::here("Reportes"))
?opts_knit
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
library(rmarkdown)
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
rmarkdown::render(input = "02_TCI_CS_Output_localizaciones.Rmd", output_file = "02_TCI_CS_Output_localizaciones.md", output_dir = here::here("Reportes"))
?i_am
?ezknit
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
library(ezknitr)
?ezknit
here()
i_am()
here::here()
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
library(ezknitr)
ezknit(wd = here::here(),
file = "R/02_TCI_CS_Output_localizaciones.Rmd"
out_dir = "Reportes/02_TCI_CS_Output_localizaciones.html",
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
library(ezknitr)
ezknit(wd = here::here(),
file = "R/02_TCI_CS_Output_localizaciones.Rmd",
out_dir = "Reportes/02_TCI_CS_Output_localizaciones.html",
keep_md = TRUE)
install.packages("R.utils")
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
library(ezknitr)
ezknit(wd = here::here(),
file = "R/02_TCI_CS_Output_localizaciones.Rmd",
out_dir = "Reportes/02_TCI_CS_Output_localizaciones.html",
keep_md = TRUE)
install.packages(‘R.methodsS3’)
install.packages("R.methodsS3")
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
library(ezknitr)
ezknit(wd = here::here(),
file = "R/02_TCI_CS_Output_localizaciones.Rmd",
out_dir = "Reportes/02_TCI_CS_Output_localizaciones.html",
keep_md = TRUE)
install.packages("R.oo")
library(ezknitr)
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
library(ezknitr)
ezknit(wd = here::here(),
file = "R/02_TCI_CS_Output_localizaciones.Rmd",
out_dir = "Reportes/02_TCI_CS_Output_localizaciones.html",
keep_md = TRUE)
here::here()
library(tidyverse)
library(rgdal) #leer polígono
library(sf) #manipular objetos espaciales tipo sf
library(raster) #manipular objetos raster
library(osmdata) #obtener datos de osm
library(ggplot2)
library(aqp) #Munsell to HEX colors
library(showtext) #fuentes de goolge
library(colorspace) #lighten or darken colors
library(ggrepel) #etiquetas
library(ggsn) #escala gráfica
library(gggibbous) #moons with grain size %
library(patchwork) #plot + inset
knitr::opts_chunk$set(include = FALSE, echo = FALSE, warning = FALSE, message = FALSE, fig.align="center", fig.showtext = TRUE, fig.retina = 1, dpi = 300, out.width = "70%", dev = "ragg_png")
library(ezknitr)
ezknit(wd = here::here(),
file = "R/02_TCI_CS_Output_localizaciones.Rmd",
out_dir = "Reportes/02_TCI_CS_Output_localizaciones.html")
?render
?dirname
here::here
here::here()
?file.path
dirname(here::here())
basename(here::here())
file.path(dirname(here::here()))
file.path(here::here())
